/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ExpCalc;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author frank
 */
public class Expcalc_Alpha extends javax.swing.JFrame {
    public double potencial=0.0,derivada=0.0;
    public double M=0.0;//massa
    public double Ti,Tf,tc,yo,xo,zo,Vxo,Vyo,Vzo; //Condições inicias do movimento relativo 
    public double n; //Número de passos;
    public double h; // Tamanho do passo
    public double t,x,y,z,Vx,Vy,Vz,r,rh; // 
    public double vrel;
    public double k1,k1z,k11,k11z,k111,k1111;  // Variaveis do método de Runge Kutta 4 ordem 
    public double k2,k22,k222,k2222,k2z,k22z;
    public double k3,k33,k333,k3333,k3z,k33z;
    public double k4,k44,k444,k4444,k4z,k44z;
    public double Energia,U,K;   
    public double i=0.0;
    double pi= 3.14;
    public FileWriter Arquivo;
    public PrintWriter GravaArquivo;
    /**
     * Creates new form Expcalc_Alpha
     */
    public Expcalc_Alpha() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Potencial = new javax.swing.JComboBox();
        InputM = new javax.swing.JTextField();
        CalculaRK = new javax.swing.JButton();
        InputX = new javax.swing.JTextField();
        InputY = new javax.swing.JTextField();
        InputVx = new javax.swing.JTextField();
        InputVy = new javax.swing.JTextField();
        InputTi = new javax.swing.JTextField();
        InputTf = new javax.swing.JTextField();
        InputNPassos = new javax.swing.JTextField();
        InputH = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RK - Ungida por Satã!");

        Potencial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Higgs", "Campo Escalar Massivo", "Campo Escalar Auto Integrante", "Gravitação Einsteiniana", "Gravitação Modificada", "Natural" }));
        Potencial.setBorder(javax.swing.BorderFactory.createTitledBorder("Potencial"));

        InputM.setText("0");
        InputM.setBorder(javax.swing.BorderFactory.createTitledBorder("Massa:"));

        CalculaRK.setText("Calcular");
        CalculaRK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CalculaRKMouseClicked(evt);
            }
        });

        InputX.setText("0.3");
        InputX.setBorder(javax.swing.BorderFactory.createTitledBorder("X:"));

        InputY.setText("0.2");
        InputY.setBorder(javax.swing.BorderFactory.createTitledBorder("Y:"));

        InputVx.setText("1.0");
        InputVx.setBorder(javax.swing.BorderFactory.createTitledBorder("Vx:"));

        InputVy.setText("2.0");
        InputVy.setBorder(javax.swing.BorderFactory.createTitledBorder("Vy:"));

        InputTi.setText("0.0");
        InputTi.setBorder(javax.swing.BorderFactory.createTitledBorder("Tempo Inicial"));

        InputTf.setText("10.0");
        InputTf.setBorder(javax.swing.BorderFactory.createTitledBorder("Tempo Final"));

        InputNPassos.setText("1000.0");
        InputNPassos.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de Passos"));

        InputH.setEditable(false);
        InputH.setText("(tf-to)/n");
        InputH.setBorder(javax.swing.BorderFactory.createTitledBorder("Tamanho dos Passos"));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(InputNPassos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(InputH, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(InputX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(InputY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(InputVx, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(InputVy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(InputTi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(InputTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(Potencial, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(InputM))
                                .add(18, 18, 18)
                                .add(CalculaRK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(Potencial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(InputM, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(CalculaRK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)))
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(InputX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputVx, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputVy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputTi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputTf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(InputNPassos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(InputH, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalculaRKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalculaRKMouseClicked
        // TODO add your handling code here:
        //Lendo as variaveis
        x    = Double.parseDouble(InputX.getText());
        y    = Double.parseDouble(InputY.getText());
        Vx  = Double.parseDouble(InputVx.getText()); 
        Vy  = Double.parseDouble(InputVy.getText());
        Ti   = Double.parseDouble(InputTi.getText());
        Tf   = Double.parseDouble(InputTf.getText());
        n   = Double.parseDouble(InputNPassos.getText());
        M  = Double.parseDouble(InputM.getText());
        
        //Preparando os potenciais e suas respectivas derivadas
        if (Potencial.getSelectedIndex()==0){//Higgs
            potencial = Math.pow((Math.pow(x,2.0)-M),2.0);
            derivada=4.0*x*(Math.pow(x,2.0)-Math.pow(M,2.0));
        }else if(Potencial.getSelectedIndex()==1){//Campo Escalar Massivo
            potencial = (0.5)*M*Math.pow(x,2.0);
            derivada=M*x;
        }else if(Potencial.getSelectedIndex()==2){//Campo Escalar Auto Integrante
            potencial = (0.25)*M*Math.pow(x,2.0);
            derivada=M*Math.pow(x,3.0);
        }else if(Potencial.getSelectedIndex()==3){//Gravitação Einsteiniana
            potencial = Math.exp(M*x);
            derivada=M*Math.exp(M*x);
        }else if(Potencial.getSelectedIndex()==3){//Gravitação Modificada
            potencial = (0.75)*Math.pow(M,2.0)*Math.pow(1-Math.exp(-0.81*x),2);
            derivada=Math.sqrt(6.0)*Math.exp(Math.sqrt((2.0/3.0)*x))*(-1.0+Math.exp(Math.sqrt((2.0/3.0)*x)))*Math.pow(M,2.0);
        }else if(Potencial.getSelectedIndex()==3){//Natural
            potencial = 1.0+Math.cos(x/M);
            derivada=-(Math.sin(x/M)/M);
        }
        try {
            Arquivo = new FileWriter("rk.dat");
            GravaArquivo = new PrintWriter(Arquivo);          
        } catch (IOException ex) {
            Logger.getLogger(Expcalc_Alpha.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Define o tamanho do passo
        t=Ti;
        n=Tf*n;
        h=(Tf-Ti)/n;
        //Calcula a RK e grava no arquivo
        for(i=0; i<=n; i++){
            GravaArquivo.printf("%e %e %e %e %e\n", t,x,y,Vx,Vy);
            k1=fa(t,x,y,Vx,Vy); // velocidade
            k11=ga(t,x,y,Vx,Vy);
            
            k2=fa(t+(0.5)*h,x+(0.5)*h*k1,y+(0.5)*h*k11,Vx,Vy);
            k22=ga(t+(0.5)*h,x+(0.5)*h*k1,y+(0.5)*h*k11,Vx,Vy);
            
            k3=fa(t+(0.5)*h,x+h*(0.5)*k2,y+h*(0.5)*k22,Vx,Vy);
            k33=ga(t+(0.5)*h,x+h*(0.5)*k2,y+h*(0.5)*k22,Vx,Vy);
            
            k4=fa(t+h,x+h*k3,y+h*k33,Vx,Vy);
            k44=ga(t+h,x+h*k3,y+h*k33,Vx,Vy);
            
            x=x+(h)*(k1+(2.0*k2)+(2.0*k3)+k4)/6.0;
            y=y+(h)*(k11+(2.0*k22)+(2.0*k33)+k44)/6.0;
            t=t+h;
            Vx=y/Vy; //Novas velocidades calculadas as posições 
            Vy=ga(t,x,y,Vx,Vy);    
        }
        try {
            Arquivo.close();
        } catch (IOException ex) {
            Logger.getLogger(Expcalc_Alpha.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] nargs = { "bash", "-c","./coisa.gp" }; 
        Runtime RodaScript = Runtime.getRuntime();
        try {
            Process p = RodaScript.exec(nargs);
        } catch (IOException ex) {
            Logger.getLogger(Expcalc_Alpha.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_CalculaRKMouseClicked

    public double fa (double t, double x, double y,double Vx,double Vy){          
        double funcao= potencial + (0.5)*Math.pow(Vx,2.0);
        double term= (2.0*pi*x*funcao)/( (1.0-pi*Math.pow(x,2.0)) );
        double term2= derivada;
        double term3=Math.sqrt(3.0*( 1-pi*Math.pow(x,2.0)) /(8.0*pi*funcao));
        double velocidadex= ( term - term2 )*term3*(0.33);
         return(velocidadex); 
    }
    
    public double ga (double t, double x, double y,double Vx,double Vy){        
        double funcao=potencial + (0.5)*Math.pow(Vx,2.0) ; 
        double velocidadey=y*Math.sqrt( (8.0*pi*funcao)/( 3.0*(1-pi*Math.pow(x, 2.0)) ) );  
        return(velocidadey); 
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Locale.setDefault(Locale.US);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Expcalc_Alpha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Expcalc_Alpha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Expcalc_Alpha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Expcalc_Alpha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Expcalc_Alpha().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalculaRK;
    private javax.swing.JTextField InputH;
    private javax.swing.JTextField InputM;
    private javax.swing.JTextField InputNPassos;
    private javax.swing.JTextField InputTf;
    private javax.swing.JTextField InputTi;
    private javax.swing.JTextField InputVx;
    private javax.swing.JTextField InputVy;
    private javax.swing.JTextField InputX;
    private javax.swing.JTextField InputY;
    private javax.swing.JComboBox Potencial;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
